--- origsrc/xapian-bindings-1.2.12/configure.ac	2012-08-23 23:37:20.529891100 -0500
+++ src/xapian-bindings-1.2.12/configure.ac	2012-08-24 00:07:27.846263700 -0500
@@ -757,14 +757,14 @@ if test no != "$with_ruby" ; then
     dnl Brief testing with Ruby 1.6.8 show the bindings probably work there,
     dnl but smoketest.rb doesn't because the test/unit module isn't available.
     AC_MSG_CHECKING([$RUBY version])
-    [version=`$RUBY -rrbconfig -e 'print Config::CONFIG["ruby_version"]' 2>/dev/null`]
+    [version=`$RUBY -rrbconfig -e 'print RbConfig::CONFIG["ruby_version"]' 2>/dev/null`]
     case $version in
     [1.[89]*]) ;; # Ruby 1.8, 1.9
     [1.[1-9][0-9]*]) ;; # Ruby 1.10+
     [[2-9]*]) ;; # Ruby 2-Ruby 9
     [1[0-9]*]) ;; # Ruby 10+
     "")
-      AC_MSG_RESULT([\$RUBY -rrbconfig -e 'print Config::CONFIG["ruby_version"]' didn't work])
+      AC_MSG_RESULT([\$RUBY -rrbconfig -e 'print RbConfig::CONFIG["ruby_version"]' didn't work])
       if test yes = "$with_ruby" ; then
 	AC_MSG_ERROR([Working Ruby interpreter not found])
       fi
@@ -783,7 +783,7 @@ if test no != "$with_ruby" ; then
       AC_ARG_VAR(RUBY_INC, [Directory where ruby.h can be found])
       if test -z "$RUBY_INC" ; then
 	dnl Ruby 1.9 added rubyhdrdir; for older Ruby we use archdir.
-	[RUBY_INC=`$RUBY -rrbconfig -e 'puts Config::CONFIG["rubyhdrdir"] || Config::CONFIG["archdir"]'`]
+	[RUBY_INC=`$RUBY -rrbconfig -e 'puts RbConfig::CONFIG["rubyhdrdir"] || Config::CONFIG["archdir"]'`]
       fi
       AC_SUBST(RUBY_INC)
       dnl Check that ruby.h is there, which is a good way to check that
@@ -816,7 +816,7 @@ if test no != "$with_ruby" ; then
 	AC_ARG_VAR(RUBY_INC_ARCH, [Directory where ruby/config.h can be found (needed from Ruby 1.9)])
 	if test -z "$RUBY_INC_ARCH" ; then
 	  dnl Ruby 1.9 requires this.
-	  [RUBY_INC_ARCH=`$RUBY -rrbconfig -e 'd = Config::CONFIG["rubyhdrdir"];if d != nil; print d + "/" + Config::CONFIG["arch"]; end'`]
+	  [RUBY_INC_ARCH=`$RUBY -rrbconfig -e 'd = RbConfig::CONFIG["rubyhdrdir"];if d != nil; print d + "/" + Config::CONFIG["arch"]; end'`]
 	  dnl For earlier versions, just make it the same as RUBY_INC.
 	  test x"$RUBY_INC_ARCH" != x || RUBY_INC_ARCH=$RUBY_INC
 	fi
@@ -824,19 +824,19 @@ if test no != "$with_ruby" ; then
 
 	AC_ARG_VAR(RUBY_LIB, [Directory to install ruby files into])
 	if test -z "$RUBY_LIB" ; then
-	  [RUBY_LIB=`$RUBY -rrbconfig -e 'puts Config::CONFIG["sitelibdir"]'`]
+	  [RUBY_LIB=`$RUBY -rrbconfig -e 'puts RbConfig::CONFIG["sitelibdir"]'`]
 	fi
 	AC_SUBST(RUBY_LIB)
 
 	AC_ARG_VAR(RUBY_LIB_ARCH, [Directory to install ruby binary modules into])
 	if test -z "$RUBY_LIB_ARCH" ; then
-	  [RUBY_LIB_ARCH=`$RUBY -rrbconfig -e 'puts Config::CONFIG["sitearchdir"]'`]
+	  [RUBY_LIB_ARCH=`$RUBY -rrbconfig -e 'puts RbConfig::CONFIG["sitearchdir"]'`]
 	fi
 	AC_SUBST(RUBY_LIB_ARCH)
 
 	RUBY_LIBS=
 	case $host_os in
-	cygwin*) RUBY_LIBS=-lruby ;;
+	cygwin*) [RUBY_LIBS=`$RUBY -rrbconfig -e 'puts RbConfig::CONFIG["LIBRUBYARG"]'`] ;;
 	esac
 	AC_SUBST(RUBY_LIBS)
 
@@ -861,7 +861,7 @@ if test no != "$with_ruby" ; then
 	  AC_MSG_ERROR([ruby.h not found])
 	fi
       fi
-      RUBY_DLEXT=`$RUBY -rrbconfig -e 'puts Config::CONFIG[["DLEXT"]]'`
+      RUBY_DLEXT=`$RUBY -rrbconfig -e 'puts RbConfig::CONFIG[["DLEXT"]]'`
       AC_SUBST(RUBY_DLEXT)
     fi
   fi
